import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Configuraci√≥n de la p√°gina
st.set_page_config(page_title="Cumbres M√°s Visitadas", layout="wide")

st.title("üèîÔ∏è Cumbres M√°s Visitadas por Monta√±istas Extranjeros")
st.markdown("""
Este dashboard permite visualizar las estad√≠sticas de las cumbres m√°s visitadas por monta√±istas extranjeros y chilenos residentes en el extranjero.
Los datos provienen del archivo que has subido.
""")

# Estilo de visualizaci√≥n con Seaborn
sns.set_theme(style="whitegrid")

# Cargar archivo desde el usuario
archivo = st.file_uploader("Sube el archivo de datos (.xlsx)", type=["xlsx"])

if archivo is not None:
    @st.cache_data
    def cargar_datos(archivo):
        # Cargar el archivo
        df = pd.read_excel(archivo)

        # Limpiar datos (eliminar filas con valores nulos en columnas clave)
        df = df.dropna(subset=["Expedici√≥n", "N¬∞ de Andinista", "Cumbre"])

        return df

    # Cargar y mostrar los datos
    df = cargar_datos(archivo)

    # Filtro por cumbre
    cumbres = sorted(df['Cumbre'].dropna().unique())
    cumbre_sel = st.selectbox("Selecciona una cumbre", cumbres)
    df_filtrado = df[df['Cumbre'] == cumbre_sel]

    # Validaci√≥n si hay datos para la cumbre seleccionada
    if df_filtrado.empty:
        st.warning(f"No hay datos disponibles para la cumbre '{cumbre_sel}'.")
    else:
        # Mostrar tabla de datos
        st.subheader(f"üìä Datos de la cumbre: {cumbre_sel}")
        st.dataframe(df_filtrado[['Expedici√≥n', 'N¬∞ de Andinista', 'Pa√≠s']].reset_index(drop=True))

        # Gr√°fico de visitas por pa√≠s
        st.subheader("üìà N√∫mero de andinistas por pa√≠s")
        conteo = df_filtrado.groupby("Pa√≠s")["N¬∞ de Andinista"].sum().sort_values(ascending=False)

        # Crear gr√°fico
        fig, ax = plt.subplots(figsize=(10, 6))
        conteo.plot(kind='bar', ax=ax, color='skyblue')
        plt.xticks(rotation=45, ha='right')
        ax.set_ylabel("N√∫mero de Andinistas")
        ax.set_title(f"Visitas a la cumbre: {cumbre_sel}")
        st.pyplot(fig)

        # Opci√≥n para descargar datos filtrados
        st.download_button(
            label="üì• Descargar datos filtrados",
            data=df_filtrado.to_csv(index=False).encode('utf-8'),
            file_name=f'datos_{cumbre_sel}.csv',
            mime='text/csv'
        )

else:
    st.info("Por favor, sube un archivo de datos (.xlsx) para continuar.")
